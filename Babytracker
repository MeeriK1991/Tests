<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Due Date Countdown</title>
  <link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@400;700&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Quicksand', sans-serif;
      text-align: center;
      padding: 20px;
      overflow: hidden;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
    }
    .countdown {
      font-size: 2em;
      margin-bottom: 10px;
    }
    .instructions {
      font-size: 1em;
      color: #777;
      margin-bottom: 20px;
    }
    .baby-container {
      display: inline-block;
      background-color: pink;
      border-radius: 50%;
      width: 80px;
      height: 80px;
      line-height: 80px;
      font-size: 2em;
      cursor: pointer;
      position: relative;
      margin-top: 10px;
    }
    .baby-container span {
      display: block;
      line-height: 80px;
    }
    .click-display {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: white;
      font-weight: bold;
      font-size: 1.2em;
      display: none;
    }
    .emoji {
      position: absolute;
      animation: float 1.5s ease-out forwards;
      font-size: 1.8em;
    }
    @keyframes float {
      0% { transform: translateY(0) scale(1); opacity: 1; }
      100% { transform: translateY(-150px) scale(1.3); opacity: 0; }
    }
    #clickCount, #timer {
      margin-top: 10px;
      color: #555;
    }
  </style>
</head>
<body>
  <h1>Countdown to Baby</h1>
  <div class="countdown" id="countdown"></div>
  <div class="instructions">Click the baby icon below to start the 10-second baby-clicker game!</div>

  <div class="baby-container" id="babyIcon">
    <span id="babyEmoji">👶</span>
    <div class="click-display" id="clickBubble">0</div>
  </div>

  <div id="clickCount"></div>
  <div id="timer"></div>

  <script>
    const dueDate = new Date('2025-09-19T00:00:00');

    function getWeekdaysCount(from, to) {
      let count = 0;
      const current = new Date(from);
      while (current <= to) {
        const day = current.getDay();
        if (day !== 0 && day !== 6) count++;
        current.setDate(current.getDate() + 1);
      }
      return count;
    }

    function updateCountdown() {
      const now = new Date();
      if (now > dueDate) {
        document.getElementById("countdown").innerText = "Due date has arrived! 👶🎉";
        return;
      }
      const weekdaysLeft = getWeekdaysCount(now, dueDate);
      document.getElementById("countdown").innerText =
        `${weekdaysLeft} weekdays until due date`;
    }

    updateCountdown();

    const babyIcon = document.getElementById('babyIcon');
    const clickCountDisplay = document.getElementById('clickCount');
    const timerDisplay = document.getElementById('timer');
    const clickBubble = document.getElementById('clickBubble');
    const babyEmoji = document.getElementById('babyEmoji');

    const babyEmojis = ['👶', '🍼', '🚼', '🧸', '👣', '🎀', '🧷'];

    let clicks = 0;
    let timeLeft = 10;
    let gameRunning = false;
    let timerInterval;
    let cooldown = false;

    function startGame() {
      if (gameRunning || cooldown) return;
      gameRunning = true;
      clicks = 0;
      timeLeft = 10;
      clickCountDisplay.innerText = `Clicks: 0`;
      timerDisplay.innerText = `Time left: 10s`;
      clickBubble.style.display = 'block';
      clickBubble.innerText = '0';
      babyEmoji.style.display = 'none';

      timerInterval = setInterval(() => {
        timeLeft--;
        timerDisplay.innerText = `Time left: ${timeLeft}s`;
        if (timeLeft <= 0) {
          clearInterval(timerInterval);
          gameRunning = false;
          cooldown = true;
          timerDisplay.innerText = `Time's up! Final score: ${clicks} 👏`;
          setTimeout(() => {
            cooldown = false;
            babyEmoji.style.display = 'block';
            clickCountDisplay.innerText = 'Click the baby to play again!';
          }, 3000);
        }
      }, 1000);
    }

    function spawnEmoji() {
      const emoji = document.createElement('div');
      emoji.className = 'emoji';
      emoji.innerText = babyEmojis[Math.floor(Math.random() * babyEmojis.length)];
      emoji.style.left = Math.random() * 90 + '%';
      emoji.style.top = '50%';
      document.body.appendChild(emoji);
      setTimeout(() => emoji.remove(), 1500);
    }

    babyIcon.addEventListener('click', () => {
      if (!gameRunning && !cooldown) startGame();
      if (gameRunning) {
        clicks++;
        clickCountDisplay.innerText = `Clicks: ${clicks}`;
        clickBubble.innerText = clicks;
        spawnEmoji();
      }
    });
  </script>
</body>
</html>
